# 保存为 .github/workflows/build.yml
name: Build and Release

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # 每天凌晨 2 点（UTC）（北京时间上午 10 点）触发
    - cron: '0 2 * * *'

# 关键：给默认 GITHUB_TOKEN 写入权限，否则无法创建 Release
permissions:
  contents: write
  pull-requests: write   # PR 场景可选

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - platform: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            bundle-targets: appimage, deb
          - platform: windows-latest
            rust-target: x86_64-pc-windows-msvc
            bundle-targets: msi
          - platform: macos-latest
            rust-target: x86_64-apple-darwin
            bundle-targets: dmg

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      # Ubuntu 24.04 适配：使用 webkit2gtk-4.1 并导出 pkg-config 路径
      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: brew install create-dmg

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./src-tauri
          tagName: v__VERSION__
          releaseName: 'PaperTalk v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          bundleTargets: ${{ matrix.bundle-targets }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: papertalk-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/
            !src-tauri/target/release/bundle/**/*.zip
          retention-days: 7

  # 仅当打标签时合并制品并发布 Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-tauri

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: true
          prerelease: false